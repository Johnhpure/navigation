version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: navigation-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-navigation}
      MYSQL_USER: ${MYSQL_USER:-navigation_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-navigation_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - navigation-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 导航站应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: navigation-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-navigation_user}:${MYSQL_PASSWORD:-navigation_password}@mysql:3306/${MYSQL_DATABASE:-navigation}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - UPLOAD_DIR=uploads
    ports:
      - "3000:3000"
    volumes:
      - uploads_data:/app/public/uploads
      - logs_data:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - navigation-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: navigation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - uploads_data:/var/www/uploads:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - navigation-network

# 数据卷
volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

# 网络
networks:
  navigation-network:
    driver: bridge
