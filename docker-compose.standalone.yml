version: '3.8'

services:
  # 导航站应用服务（连接到宿主机 MySQL）
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: navigation-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      # 连接到宿主机的 MySQL（使用 host.docker.internal 或宿主机 IP）
      - DATABASE_URL=mysql://${MYSQL_USER:-navigation_user}:${MYSQL_PASSWORD}@host.docker.internal:${MYSQL_PORT:-3306}/${MYSQL_DATABASE:-navigation}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - UPLOAD_DIR=uploads
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - uploads_data:/app/public/uploads
      - logs_data:/app/logs
    # 允许容器访问宿主机网络
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - navigation-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: navigation-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/standalone.conf:/etc/nginx/conf.d/default.conf:ro
      - uploads_data:/var/www/uploads:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - navigation-network
    profiles:
      - nginx  # 使用 profile 使 nginx 可选

# 数据卷（不包括 MySQL 数据）
volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local

# 网络
networks:
  navigation-network:
    driver: bridge
